{"ast":null,"code":"var _jsxFileName = \"/Users/karansahota/Me/projects/therapeek/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [showReadReceipt, setShowReadReceipt] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Add some initial messages (bot + system)\n    setMessages([{\n      id: 1,\n      sender: 'system',\n      text: 'Today 7:16 pm'\n    },\n    // \"system\" for center text or top bar\n    {\n      id: 2,\n      sender: 'bot',\n      text: 'Hello! How can I help you?',\n      timestamp: '7:16 pm'\n    }]);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Grab current time (HH:MM)\n    const timeNow = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    // Create user message\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: input.trim(),\n      timestamp: timeNow\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setShowReadReceipt(false);\n\n    // Simulate \"typing\" indicator for 1.5s before bot replies\n    setTyping(true);\n    setTimeout(() => {\n      setTyping(false);\n      setShowReadReceipt(true);\n      const botReply = {\n        id: Date.now() + 1,\n        sender: 'bot',\n        text: 'This is a bot reply!',\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setMessages(prev => [...prev, botReply]);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.map(msg => {\n          if (msg.sender === 'system') {\n            // Centered \"system\" text (e.g. \"Today 7:16 pm\")\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                margin: '8px 0',\n                color: '#8e8e93'\n              },\n              children: msg.text\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          }\n\n          // Normal user/bot message\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${msg.sender}-message`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: msg.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), msg.sender === 'user' && showReadReceipt && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-receipt\",\n                children: [\"Read \", msg.timestamp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        }), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper bot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator-bubble\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            type: \"submit\",\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ndtRiBwScIO+lw7A4sKAnF4O6d0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","typing","setTyping","showReadReceipt","setShowReadReceipt","messagesEndRef","id","sender","text","timestamp","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","e","preventDefault","trim","timeNow","Date","toLocaleTimeString","hour","minute","userMessage","now","prev","setTimeout","botReply","className","children","map","msg","style","textAlign","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/karansahota/Me/projects/therapeek/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [showReadReceipt, setShowReadReceipt] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Add some initial messages (bot + system)\n    setMessages([\n      { id: 1, sender: 'system', text: 'Today 7:16 pm' }, // \"system\" for center text or top bar\n      { id: 2, sender: 'bot', text: 'Hello! How can I help you?', timestamp: '7:16 pm' },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Grab current time (HH:MM)\n    const timeNow = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n    // Create user message\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: input.trim(),\n      timestamp: timeNow,\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setShowReadReceipt(false);\n\n    // Simulate \"typing\" indicator for 1.5s before bot replies\n    setTyping(true);\n    setTimeout(() => {\n      setTyping(false);\n      setShowReadReceipt(true);\n      const botReply = {\n        id: Date.now() + 1,\n        sender: 'bot',\n        text: 'This is a bot reply!',\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      };\n      setMessages((prev) => [...prev, botReply]);\n    }, 1500);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"chat-container\">\n        {/* You can also place a time header here if you want it top-right instead of system center */}\n        {/* <div className=\"header-time\">Today 7:16 pm</div> */}\n\n        <div className=\"messages-container\">\n          {messages.map((msg) => {\n            if (msg.sender === 'system') {\n              // Centered \"system\" text (e.g. \"Today 7:16 pm\")\n              return (\n                <div\n                  key={msg.id}\n                  style={{ textAlign: 'center', margin: '8px 0', color: '#8e8e93' }}\n                >\n                  {msg.text}\n                </div>\n              );\n            }\n\n            // Normal user/bot message\n            return (\n              <div key={msg.id} className={`message-wrapper ${msg.sender}-message`}>\n                <div className=\"message-content\">\n                  <div>{msg.text}</div>\n                  {msg.timestamp && (\n                    <span className=\"message-time\">{msg.timestamp}</span>\n                  )}\n                  {/* \"Read\" receipt for user messages after bot responds */}\n                  {msg.sender === 'user' && showReadReceipt && (\n                    <span className=\"read-receipt\">Read {msg.timestamp}</span>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n\n          {/* Typing indicator bubble */}\n          {typing && (\n            <div className=\"message-wrapper bot-message\">\n              <div className=\"typing-indicator-bubble\">\n                <div className=\"typing-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Smaller, centered input bar */}\n        <div className=\"input-container\">\n          <form onSubmit={handleSend}>\n            <input\n              type=\"text\"\n              placeholder=\"Ask anything\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button className=\"send-button\" type=\"submit\">\n              ➤\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}